GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1
export VIRTUAL_ENV_DISABLE_PROMPT=true
PROMPT_COMMAND='bash_prompt'

__virtualenv_ps1()
{
	local VIRT_ENV=""
	if [ -n "$VIRTUAL_ENV" ] ; then
		VIRT_ENV="[`basename \"$VIRTUAL_ENV\"`]"
	fi
	echo $VIRT_ENV
}
bash_prompt()
{
	EXIT=$?
	history -a
	# colors
	local BLACK="\[\033[00;30m\]"
	local GRAY="\[\033[00;m\]"
	local GREEN="\[\033[00;32m\]"
	local YELLOW="\[\033[00;33m\]"
	local BLUE="\[\033[00;34m\]"
	local MAGENTA="\[\033[00;35m\]"
	local CYAN="\[\033[00;36m\]"
	local WHITE="\[\033[00;37m\]"
	local END_COLOR="\[\033[00m\]"


	# solarized theme 
	# iterm2 settings
	# [ ] draw bold text in bold font
	# [ ] draw bold text in bright colors
	local BLACK="\[\033[38;05;10m\]"
	local GRAY="\[\033[38;05;12m\]"
	local RED="\[\033[38;05;160m\]"
	local PURPLE="\[\033[38;05;61m\]"

	# http://linuxtidbits.wordpress.com/2008/08/11/output-color-on-bash-scripts/
	local BOLDRED=$(tput bold)$(tput setaf 1)
	local NORMAL=$(tput sgr 0)

	local DEFAULT_COLOR=$GRAY
	local USERNAME_COLOR=$BLACK
	local VIRTUALENV_COLOR=$MAGENTA
	local GIT_COLOR=$GREEN


	local HOSTNAME_COLOR
	PLATFORM='unknown'
	if [[ `uname` == Darwin ]]; then
		OSX=1
		HOSTNAME_COLOR=$CYAN
	else
		HOSTNAME=`hostname -f`
		if [[ `hostname` == hotcops ]]; then
			HOSTNAME_COLOR=$WHITE
		elif [[ $HOSTNAME == *vpnlocal* ]]; then
			case $BOXSET in
				"prod") HOSTNAME_COLOR=$RED ;;
				"stage") HOSTNAME_COLOR=$MAGENTA ;;
				*) HOSTNAME_COLOR=$PURPLE ;;
			esac
		else
			HOSTNAME_COLOR=$YELLOW
		fi
	fi


	if [[ "$OS_PROJECT_NAME" ]]
	then
		PROJ="${BOLDRED}[${OS_PROJECT_NAME}]${END_COLOR}"
	fi
	# prompt
	local DATE="$PURPLE[$(date +"%b-%d %H:%M")]$END_COLOR"
	local HOSTNAME="$HOSTNAME_COLOR\h$END_COLOR"
	local USERNAME="[$USERNAME_COLOR\u@$END_COLOR$HOSTNAME$USERNAME_COLOR]$END_COLOR"
	local LOCATION="$BLUE[\w]$END_COLOR"
	local CURSOR_TOPCURVE=$'\xe2\x95\xad'
	local CURSOR_TOPCURVE="\[$BOLDRED\]$CURSOR_TOPCURVE\[$NORMAL\]"
	local CURSOR_BOTTOMCURVE=$'\xe2\x95\xb0'
	local CURSOR=$'\xe2\x9e\xa4'
	local CURSOR="\[$BOLDRED\]$CURSOR_BOTTOMCURVE $CURSOR\[$NORMAL\]"
	if type "__git_ps1" > /dev/null; then
		local GIT="$GIT_COLOR\$(__git_ps1 '[%s]')$END_COLOR"
	fi
	local VIRT_ENV="$VIRTUALENV_COLOR\$(__virtualenv_ps1)$END_COLOR"

	if  [[ $EXIT -gt 0 ]]
	then
		local EMOJI="$PURPLE(╯${END_COLOR}${RED}ಠ${END_COLOR}${BLACK}益${END_COLOR}${RED}ಠ$END_COLOR$PURPLE)╯$END_COLOR$WHITE ︵  $END_COLOR${YELLOW}┻━┻$END_COLOR"
	else
		local EMOJI="${BOLDRED}♪${END_COLOR}${PURPLE}┏(${END_COLOR}${YELLOW}・o･${END_COLOR}${PURPLE})┛${BOLDRED}♪${END_COLOR}${PURPLE}┗ ( ${END_COLOR}${GREEN}･o･${END_COLOR}${PURPLE}) ┓${END_COLOR}${BOLDRED}♪${END_COLOR}"
	fi
	DIVIDER=""
	X=0
	while [ $X -le 81 ]
	do
		DIVIDER="_$DIVIDER"
		X=$(( $X +1 ))
	done

	DIVIDER="$WHITE$DIVIDER$END_COLOR"
	FIRSTLINE=$DATE$USERNAME$VIRT_ENV$GIT$PROJ$LOCATION$EMOJI

	export PS1="$DIVIDER\n$CURSOR_TOPCURVE $FIRSTLINE\n$CURSOR "
	export PS2=$CURSOR
}


